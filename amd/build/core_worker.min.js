var __awaiter=this&&this.__awaiter||function(r,e,t,o){return new(t||(t=Promise))((function(i,n){function s(r){try{c(o.next(r))}catch(r){n(r)}}function a(r){try{c(o.throw(r))}catch(r){n(r)}}function c(r){var e;r.done?i(r.value):(e=r.value,e instanceof t?e:new t((function(r){r(e)}))).then(s,a)}c((o=o.apply(r,e||[])).next())}))};define(["require","exports"],(function(r,e){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class t{constructor(r){if("string"!=typeof r||r.length<=0)throw new Error("Invalid script path.");let e=new XMLHttpRequest;if(e.open("HEAD",r,!1),e.send(),404===e.status)throw new Error("Script not found.")}}e.ServiceWorker=class extends t{constructor(r){if(super(r),!navigator||!navigator.serviceWorker||!navigator.serviceWorker.register)throw new Error("Browser does not support ServiceWorker.");if("https:"!==location.protocol)throw new Error("ServiceWorker can only run with https.");this._path=r}create(r,e,t){return __awaiter(this,void 0,void 0,(function*(){let o=yield navigator.serviceWorker.register(this._path,{scope:r});if("object"!=typeof o)throw new Error("Could not create ServiceWorker.");this._registration=o,this._worker=this._getWorker(o),e&&(this._worker.onerror=e),t&&(this._worker.onstatechange=t)}))}register(r,e){return __awaiter(this,void 0,void 0,(function*(){let t=yield navigator.serviceWorker.getRegistration(this._path);if("object"!=typeof t)throw new Error("Could not register ServiceWorker.");this._registration=t,this._worker=this._getWorker(t),r&&(this._worker.onerror=r),e&&(this._worker.onstatechange=e)}))}update(){return __awaiter(this,void 0,void 0,(function*(){if("object"!=typeof this._registration)throw new Error("No registered ServiceWorker found.");yield this._registration.update()}))}getWorker(){return this._worker}getRegistration(){return this._registration}_getWorker(r){if(r.installing)return r.installing;if(r.waiting)return r.waiting;if(r.active)return r.active;throw new Error("No ServiceWorker found.")}};e.WebWorker=class extends t{constructor(r){super(r)}}}));